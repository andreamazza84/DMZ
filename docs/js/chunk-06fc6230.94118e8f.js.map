{"version":3,"sources":["webpack:///../../../src/components/VTabs/VTab.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///../../../src/mixins/mobile/index.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VTabs/VTabsBar.ts","webpack:///../../../src/components/VTabs/VTabsItems.ts","webpack:///../../../src/components/VTabs/VTabsSlider.ts","webpack:///../../../src/components/VTabs/VTabs.ts"],"names":["baseMixins","name","props","ripple","type","Boolean","default","data","proxyClass","computed","classes","this","groupClasses","value","to","$router","Object","resolve","mounted","methods","click","href","indexOf","e","$el","blur","render","String","role","tabindex","keydown","h","tag","$slots","isBooted","window","mobileBreakpoint","Number","$vuetify","breakpoint","validator","v","isNaN","includes","isMobile","mobile","mobileWidth","parseInt","isNumber","width","created","$attrs","hasOwnProperty","BaseSlideGroup","mixins","directives","Resize","Touch","activeClass","centerActive","nextIcon","prevIcon","showArrows","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","widths","content","wrapper","canTouch","__cachedNext","genTransition","__cachedPrev","hasAffixes","Math","hasNext","hasPrev","watch","internalValue","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","next","$createElement","staticClass","class","on","key","genContent","ref","genData","onResize","genIcon","icon","rtl","location","upperLocation","hasAffix","VIcon","disabled","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","document","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","setWidths","provide","slideGroup","tabsBar","themeClasses","$route","callSlider","onRouteChange","newPath","val","oldPath","oldVal","hasNew","hasOld","item","undefined","VWindow","mandatory","isDark","getValue","setBackgroundColor","alignWithTitle","backgroundColor","centered","fixedTabs","grow","height","hideSlider","iconsAndText","optional","right","sliderColor","sliderSize","vertical","slider","left","top","transitionTime","isReversed","sliderStyles","transition","computedColor","selectedItems","activeTab","el","scrollWidth","genBar","style","dark","light","change","VTabsBar","genSlider","genItems","VTabsItems","VTabsSlider","color","clearTimeout","parseNodes","tab","i","vnode","modifiers","quiet"],"mappings":"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","file":"js/chunk-06fc6230.94118e8f.js","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  mounted () {\n    this.onRouteChange()\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Components\nimport VTab from './VTab'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport SSRBootable from '../../mixins/ssr-bootable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { Route } from 'vue-router'\nimport { VNode } from 'vue'\n\ntype VTabInstance = InstanceType<typeof VTab>\n\nexport default mixins(\n  BaseSlideGroup,\n  SSRBootable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide () {\n    return {\n      tabsBar: this,\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    callSlider () {\n      if (!this.isBooted) return\n\n      this.$emit('call:slider')\n    },\n    genContent () {\n      const render = BaseSlideGroup.options.methods.genContent.call(this)\n\n      render.data = render.data || {}\n      render.data.staticClass += ' v-tabs-bar__content'\n\n      return render\n    },\n    onRouteChange (val: Route, oldVal: Route) {\n      /* istanbul ignore next */\n      if (this.mandatory) return\n\n      const items = this.items as unknown as VTabInstance[]\n      const newPath = val.path\n      const oldPath = oldVal.path\n\n      let hasNew = false\n      let hasOld = false\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true\n        else if (item.to === oldPath) hasOld = true\n\n        if (hasNew && hasOld) break\n      }\n\n      // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n      if (!hasNew && hasOld) this.internalValue = undefined\n    },\n  },\n\n  render (h): VNode {\n    const render = BaseSlideGroup.options.render.call(this, h)\n\n    render.data!.attrs = {\n      role: 'tablist',\n    }\n\n    return render\n  },\n})\n","// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n// Types & Components\nimport { BaseItemGroup, GroupableInstance } from './../VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  props: {\n    mandatory: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VWindow.options.computed.classes.call(this),\n        'v-tabs-items': true,\n      }\n    },\n    isDark (): boolean {\n      return this.rootIsDark\n    },\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number) {\n      return item.id || BaseItemGroup.options.methods.getValue.call(this, item, i)\n    },\n  },\n})\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-tabs-slider',\n\n  render (h): VNode {\n    return h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-tabs-slider',\n    }))\n  },\n})\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport VTabsBar from './VTabsBar'\nimport VTabsItems from './VTabsItems'\nimport VTabsSlider from './VTabsSlider'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  Proxyable,\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $refs: {\n    items: InstanceType<typeof VTabsBar>\n  }\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    alignWithTitle: Boolean,\n    backgroundColor: String,\n    centerActive: Boolean,\n    centered: Boolean,\n    fixedTabs: Boolean,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    iconsAndText: Boolean,\n    mobileBreakpoint: [String, Number],\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    optional: Boolean,\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    right: Boolean,\n    showArrows: [Boolean, String],\n    sliderColor: String,\n    sliderSize: {\n      type: [Number, String],\n      default: 2,\n    },\n    vertical: Boolean,\n  },\n\n  data () {\n    return {\n      resizeTimeout: 0,\n      slider: {\n        height: null as null | number,\n        left: null as null | number,\n        right: null as null | number,\n        top: null as null | number,\n        width: null as null | number,\n      },\n      transitionTime: 300,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tabs--align-with-title': this.alignWithTitle,\n        'v-tabs--centered': this.centered,\n        'v-tabs--fixed-tabs': this.fixedTabs,\n        'v-tabs--grow': this.grow,\n        'v-tabs--icons-and-text': this.iconsAndText,\n        'v-tabs--right': this.right,\n        'v-tabs--vertical': this.vertical,\n        ...this.themeClasses,\n      }\n    },\n    isReversed (): boolean {\n      return this.$vuetify.rtl && this.vertical\n    },\n    sliderStyles (): object {\n      return {\n        height: convertToUnit(this.slider.height),\n        left: this.isReversed ? undefined : convertToUnit(this.slider.left),\n        right: this.isReversed ? convertToUnit(this.slider.right) : undefined,\n        top: this.vertical ? convertToUnit(this.slider.top) : undefined,\n        transition: this.slider.left != null ? null : 'none',\n        width: convertToUnit(this.slider.width),\n      }\n    },\n    computedColor (): string {\n      if (this.color) return this.color\n      else if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n  },\n\n  watch: {\n    alignWithTitle: 'callSlider',\n    centered: 'callSlider',\n    centerActive: 'callSlider',\n    fixedTabs: 'callSlider',\n    grow: 'callSlider',\n    iconsAndText: 'callSlider',\n    right: 'callSlider',\n    showArrows: 'callSlider',\n    vertical: 'callSlider',\n    '$vuetify.application.left': 'onResize',\n    '$vuetify.application.right': 'onResize',\n    '$vuetify.rtl': 'onResize',\n  },\n\n  mounted () {\n    this.$nextTick(() => {\n      window.setTimeout(this.callSlider, 30)\n    })\n  },\n\n  methods: {\n    callSlider () {\n      if (\n        this.hideSlider ||\n        !this.$refs.items ||\n        !this.$refs.items.selectedItems.length\n      ) {\n        this.slider.width = 0\n        return false\n      }\n\n      this.$nextTick(() => {\n        // Give screen time to paint\n        const activeTab = this.$refs.items.selectedItems[0]\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) {\n          this.slider.width = 0\n          this.slider.left = 0\n          return\n        }\n        const el = activeTab.$el as HTMLElement\n\n        this.slider = {\n          height: !this.vertical ? Number(this.sliderSize) : el.scrollHeight,\n          left: this.vertical ? 0 : el.offsetLeft,\n          right: this.vertical ? 0 : el.offsetLeft + el.offsetWidth,\n          top: el.offsetTop,\n          width: this.vertical ? Number(this.sliderSize) : el.scrollWidth,\n        }\n      })\n\n      return true\n    },\n    genBar (items: VNode[], slider: VNode | null) {\n      const data = {\n        style: {\n          height: convertToUnit(this.height),\n        },\n        props: {\n          activeClass: this.activeClass,\n          centerActive: this.centerActive,\n          dark: this.dark,\n          light: this.light,\n          mandatory: !this.optional,\n          mobileBreakpoint: this.mobileBreakpoint,\n          nextIcon: this.nextIcon,\n          prevIcon: this.prevIcon,\n          showArrows: this.showArrows,\n          value: this.internalValue,\n        },\n        on: {\n          'call:slider': this.callSlider,\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n        ref: 'items',\n      }\n\n      this.setTextColor(this.computedColor, data)\n      this.setBackgroundColor(this.backgroundColor, data)\n\n      return this.$createElement(VTabsBar, data, [\n        this.genSlider(slider),\n        items,\n      ])\n    },\n    genItems (items: VNode | null, item: VNode[]) {\n      // If user provides items\n      // opt to use theirs\n      if (items) return items\n\n      // If no tabs are provided\n      // render nothing\n      if (!item.length) return null\n\n      return this.$createElement(VTabsItems, {\n        props: {\n          value: this.internalValue,\n        },\n        on: {\n          change: (val: any) => {\n            this.internalValue = val\n          },\n        },\n      }, item)\n    },\n    genSlider (slider: VNode | null) {\n      if (this.hideSlider) return null\n\n      if (!slider) {\n        slider = this.$createElement(VTabsSlider, {\n          props: { color: this.sliderColor },\n        })\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-tabs-slider-wrapper',\n        style: this.sliderStyles,\n      }, [slider])\n    },\n    onResize () {\n      if (this._isDestroyed) return\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.callSlider, 0)\n    },\n    parseNodes () {\n      let items = null\n      let slider = null\n      const item = []\n      const tab = []\n      const slot = this.$slots.default || []\n      const length = slot.length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = slot[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider = vnode\n              break\n            case 'v-tabs-items': items = vnode\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      /**\n       * tab: array of `v-tab`\n       * slider: single `v-tabs-slider`\n       * items: single `v-tabs-items`\n       * item: array of `v-tab-item`\n       */\n      return { tab, slider, items, item }\n    },\n  },\n\n  render (h): VNode {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      class: this.classes,\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize,\n      }],\n    }, [\n      this.genBar(tab, slider),\n      this.genItems(items, item),\n    ])\n  },\n})\n"],"sourceRoot":""}